# 服务器端口
server.port=8080
# 应用程序名称，将表现在Eureka服务器状态页面的列表中
spring.application.name=api
#kafka的消费者分组id
spring.kafka.consumer.group-id=cn.tedu
# 指定Eureka客户端注册时是否使用IP地址来注册
# - true：使用IP地址来注册，应该配合 eureka.instance.ip-address 属性一起使用
# - false：使用主机名来注册，应该配置 eureka.instance.hostname 属性一起使用
eureka.instance.prefer-ip-address=false
# 指定Eureka客户端注册时将自身注册为哪个IP地址，127.0.0.1等同于localhost，表示本机
eureka.instance.ip-address=127.0.0.1
# 指定Eureka客户端注册时将自身注册为哪个主机名称
eureka.instance.hostname=localhost
# 指定Eureka客户端在服务器端状态列表中显示的名称
eureka.instance.instance-id=${eureka.instance.hostname}:${spring.application.name}:${server.port}
# 连接数据库的配置信息
spring.datasource.url=jdbc:mysql://localhost:3306/straw?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
spring.datasource.username=root
spring.datasource.password=root
# 将响应的JSON数据设置为“不为null”时显示，反之，为null的属性将不会出现在JSON数据中
spring.jackson.default-property-inclusion=non_null
# Spring Security临时使用的用户名和密码
spring.security.user.name=user
spring.security.user.password=1234
# 配置SQL语句的XML文件的位置
mybatis.mapper-locations=classpath:mapper/*.xml
# 设置日志显示级别
logging.level.cn.tedu.straw=trace
# 上传文件大小的限制
spring.servlet.multipart.max-file-size=104857600
spring.servlet.multipart.max-request-size=104857600
# 自定义配置：将上传的问题图片保存到哪里
project.upload.base-dir=D:/xyz
# 自定义配置：上传问题图片的文件大小
project.upload.question-image.max-size=5242880
# 自定义配置：上传问题图片的文件类型
project.upload.question-image.types=image/jpeg, image/png
# 自定义配置：静态资源服务器的应用程序名称,需要与网关转发的path前缀相同
project.resource-server.name=resource
# 自定义配置：显示“我的问答”列表时每页显示多少条数据
project.questions.my-list.page-size=3